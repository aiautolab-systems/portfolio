name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.56.1-noble
      options: --user root
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: npm ci

    - name: Build, serve and run Playwright tests
      # Build the production bundle, serve the static `dist` folder in background,
      # wait until the server is ready, then run Playwright tests against it.
      # Using build+serve mirrors the production artifacts and is robust in CI.
      run: |
        npm run build
        # serve the dist folder on port 5173 in background
        npx serve dist -l 5173 &
        # wait for the server to be ready before running tests
        npx wait-on http://localhost:5173
        # run Playwright tests
        npx playwright test tests --reporter=list

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: results/html-report/
        retention-days: 30

    - name: Upload test videos
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-videos
        path: reports/
        retention-days: 7

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm

    - name: Install dependencies
      run: npm ci

    - name: Build site
      run: npm run build

    - name: Upload build output
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4